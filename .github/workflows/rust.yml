name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cargo Fmt
        run: cargo fmt --all -- --check

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: ["stable", "1.80"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: |
          cargo test --verbose
          cargo test --verbose --features tokio
          cargo test --verbose --features smol
          cargo test --verbose --features smol,tokio

  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-linux-android, armv7-linux-androideabi"
      - name: build
        run: |
          cargo build --target aarch64-linux-android --all-features
          cargo build --target armv7-linux-androideabi --all-features

  build_wasm32:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "wasm32-unknown-unknown"
      - name: build
        run: |
          cargo build --target wasm32-unknown-unknown --all-features
